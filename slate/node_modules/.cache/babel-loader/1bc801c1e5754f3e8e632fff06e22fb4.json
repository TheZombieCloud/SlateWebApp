{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar createHelper = function createHelper(func, helperName) {\n  var setDisplayName = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n  var noArgs = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n  if (process.env.NODE_ENV !== 'production' && setDisplayName) {\n    var _ret = function () {\n      /* eslint-disable global-require */\n      var wrapDisplayName = require('./wrapDisplayName').default;\n      /* eslint-enable global-require */\n\n\n      if (noArgs) {\n        return {\n          v: function v(BaseComponent) {\n            var Component = func(BaseComponent);\n            Component.displayName = wrapDisplayName(BaseComponent, helperName);\n            return Component;\n          }\n        };\n      }\n\n      return {\n        v: function v() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          if (args.length > func.length) {\n            /* eslint-disable */\n            console.error(\n            /* eslint-enable */\n            'Too many arguments passed to ' + helperName + '(). It should called ' + ('like so: ' + helperName + '(...args)(BaseComponent).'));\n          }\n\n          return function (BaseComponent) {\n            var Component = func.apply(undefined, args)(BaseComponent);\n            Component.displayName = wrapDisplayName(BaseComponent, helperName);\n            return Component;\n          };\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n\n  return func;\n};\n\nexports.default = createHelper;","map":null,"metadata":{},"sourceType":"script"}