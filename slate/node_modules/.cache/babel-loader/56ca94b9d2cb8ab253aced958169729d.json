{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\Documents\\\\GitHub\\\\SlateWebApp\\\\slate\\\\src\\\\ProfilePage.js\";\nimport React from 'react';\nimport './PPc.css';\nimport \"./SettingsStyles.css\";\nimport img2 from \"./RightTopimg.svg\";\nimport history from \"./history.js\";\nimport { NavLink } from \"react-router-dom\";\n\nclass ProfilePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      activemail: false,\n      friendname: '',\n      added: '-1'\n    };\n    this.togglePopup = this.togglePopup.bind(this);\n    this.togglePopupe = this.togglePopupe.bind(this);\n    this.togglePopupf = this.togglePopupf.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getAdded = this.getAdded.bind(this);\n  }\n\n  getAdded() {\n    return this.state.added;\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  togglePopup() {\n    this.setState({\n      active: !this.state.active\n    });\n  }\n\n  togglePopupe() {\n    this.setState({\n      activemail: !this.state.activemail\n    });\n  }\n\n  togglePopupf() {\n    this.setState({\n      added: '-1'\n    });\n  }\n\n  logout() {\n    fetch('/logout', {\n      method: 'POST'\n    }).then(response => {\n      if (response.ok) {\n        localStorage.setItem('auth', 'false');\n        history.push('/');\n      } else {\n        history.push('/pp');\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    fetch('/find', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        fn: this.state.friendname\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data === '') {\n        this.state.added = \"No users found\";\n      } else if (data === 'added') {\n        this.setState({\n          added: \"Friend already added\"\n        }); //this.state.added = \"Friend already added\";\n      } else {\n        this.state.added = \"Added \" + data;\n      }\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img2p\",\n      src: img2,\n      width: \"400\",\n      height: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/pp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"titlepp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Slate\")), React.createElement(\"div\", {\n      className: \"main2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Profile\"), React.createElement(\"div\", {\n      className: \"settingsBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"settingButton\",\n      onClick: this.togglePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(\"button\", {\n      className: \"settingButton\",\n      onClick: this.togglePopupe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Change Email\"), React.createElement(NavLink, {\n      to: \"/schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"settingButton2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Change Schedule\")), React.createElement(\"button\", {\n      className: \"settingButton\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"form\", {\n      className: \"ppform\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"searchfrt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Search for Friends\"), React.createElement(\"input\", {\n      className: \"searchBar\",\n      id: \"friendname\",\n      type: \"text\",\n      value: this.state.friendname,\n      onChange: this.handleChange,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"settingButton3\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Feed\"))))), this.state.active ? React.createElement(Popup, {\n      toggle: this.togglePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }) : null, this.state.activemail ? React.createElement(PopupEmail, {\n      toggle: this.togglePopupe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : null, this.state.added !== \"-1\" ? React.createElement(PopupFriend, {\n      string: this.getAdded,\n      toggle: this.togglePopupf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      retype: '',\n      wrong: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClick() {\n    this.props.toggle();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.retype === this.state.password) {\n      fetch('/password', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: this.state.password\n        })\n      }).then(response => {\n        if (response.ok) {\n          this.props.toggle();\n        }\n      });\n    } else {\n      this.setState({\n        wrong: true\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"p\", {\n      className: \"bigtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"searchfrt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      id: \"password\",\n      className: \"searchBar2\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"search2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"searchfrt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Retype Password\"), React.createElement(\"input\", {\n      id: \"retype\",\n      className: \"searchBar2\",\n      type: \"password\",\n      value: this.state.retype,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"textpop\",\n      value: \"Update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), this.state.wrong ? React.createElement(\"h1\", {\n      className: \"match\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Your passwords do not match\") : null));\n  }\n\n}\n\nclass PopupEmail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      retype: '',\n      wrong: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClick() {\n    this.props.toggle();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.retype === this.state.email) {\n      fetch('/email', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email\n        })\n      }).then(response => {\n        if (response.ok) {\n          this.props.toggle();\n        }\n      });\n    } else {\n      this.setState({\n        wrong: true\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"p\", {\n      className: \"bigtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Change Email\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"searchfrt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"New Email\"), React.createElement(\"input\", {\n      id: \"email\",\n      className: \"searchBar2\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"search2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"searchfrt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Retype Email\"), React.createElement(\"input\", {\n      id: \"retype\",\n      className: \"searchBar2\",\n      type: \"email\",\n      value: this.state.retype,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"textpop\",\n      value: \"Update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), this.state.wrong ? React.createElement(\"h1\", {\n      className: \"match\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Your emails do not match\") : null));\n  }\n\n}\n\nclass PopupFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.toggle();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"p\", {\n      className: \"bigtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Add Friend\"), this.props.string()));\n  }\n\n}\n\nexport default ProfilePage;","map":{"version":3,"sources":["C:\\Users\\alexm\\Documents\\GitHub\\SlateWebApp\\slate\\src\\ProfilePage.js"],"names":["React","history","NavLink","ProfilePage","Component","constructor","props","state","active","activemail","friendname","added","togglePopup","bind","togglePopupe","togglePopupf","handleChange","handleSubmit","getAdded","event","setState","target","id","value","logout","fetch","method","then","response","ok","localStorage","setItem","push","headers","body","JSON","stringify","fn","json","data","preventDefault","render","img2","Popup","password","retype","wrong","handleClick","toggle","PopupEmail","email","PopupFriend","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './PPc.css';\r\nimport \"./SettingsStyles.css\";\r\nimport img2 from \"./RightTopimg.svg\";\r\nimport history from \"./history.js\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass ProfilePage extends React.Component{\r\n\r\n     constructor(props){\r\n         super(props);\r\n         this.state = {\r\n             active: false,\r\n             activemail: false,\r\n             friendname: '',\r\n             added: '-1'\r\n         };\r\n         this.togglePopup = this.togglePopup.bind(this);\r\n         this.togglePopupe = this.togglePopupe.bind(this);\r\n         this.togglePopupf = this.togglePopupf.bind(this);\r\n         this.handleChange=this.handleChange.bind(this);\r\n         this.handleSubmit = this.handleSubmit.bind(this);\r\n         this.getAdded = this.getAdded.bind(this);\r\n     }\r\n\r\n     getAdded(){\r\n        return this.state.added;\r\n     }\r\n\r\n     handleChange(event){\r\n         this.setState({[event.target.id]: event.target.value});\r\n     }\r\n\r\n     togglePopup() {\r\n         this.setState({\r\n             active: !this.state.active\r\n         });\r\n     }\r\n\r\n     togglePopupe() {\r\n         this.setState({\r\n             activemail: !this.state.activemail\r\n         });\r\n     }\r\n\r\n     togglePopupf() {\r\n         this.setState({\r\n             added: '-1'\r\n         })\r\n     }\r\n\r\n     logout() {\r\n         fetch('/logout', {\r\n             method: 'POST'\r\n         }).then(response => {\r\n             if (response.ok) {\r\n                 localStorage.setItem('auth', 'false');\r\n                 history.push('/');\r\n             } else {\r\n                 history.push('/pp');\r\n             }\r\n         })\r\n     }\r\n\r\n     handleSubmit(event) {\r\n         fetch('/find', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Accept': 'application/json',\r\n               'Content-Type': 'application/json'\r\n             },\r\n             body: JSON.stringify({\r\n                 fn: this.state.friendname\r\n             })\r\n         }).then(response => {\r\n             return response.json();\r\n         }).then(data=>{\r\n             if (data===''){\r\n                 this.state.added = \"No users found\";\r\n             }\r\n             else if (data==='added'){\r\n                 this.setState({\r\n                     added: \"Friend already added\"\r\n                 })\r\n                 //this.state.added = \"Friend already added\";\r\n             }\r\n             else {\r\n                 this.state.added = \"Added \" + data;\r\n             }\r\n         })\r\n         event.preventDefault();\r\n     }\r\n\r\n     render(){\r\n         return(\r\n             <div>\r\n                 <div className = \"container\">\r\n                     <div className = \"container2\">\r\n                         <img className=\"img2p\" src={img2} width=\"400\" height=\"400\"/>\r\n                         <NavLink to = \"/pp\"><h1 className=\"titlepp\">Slate</h1></NavLink>\r\n                         <div className = \"main2\">\r\n                             <div class = \"profile\">\r\n                                 <h1>Profile</h1>\r\n                                 <div className=\"settingsBox\">\r\n                                     <button className=\"settingButton\" onClick = {this.togglePopup}>Change Password</button>\r\n                                     <button className=\"settingButton\" onClick = {this.togglePopupe}>Change Email</button>\r\n                                     <NavLink to = \"/schedule\"><button className = \"settingButton2\">Change Schedule</button></NavLink>\r\n                                     <button className=\"settingButton\" onClick={this.logout}>Log Out</button>\r\n                                 </div>\r\n                                 <form className = \"ppform\" onSubmit = {this.handleSubmit}>\r\n                                     <div className = \"search\">\r\n                                         <h6 className = \"searchfrt\">Search for Friends</h6>\r\n                                         <input className =\"searchBar\" id=\"friendname\" type = \"text\" value={this.state.friendname} onChange={this.handleChange} placeholder = \"Search...\"/>\r\n                                     </div>\r\n                                     <input type = \"submit\"  className = \"settingButton3\" value = \"Search\"/>\r\n                                 </form>\r\n                             </div>\r\n                             <div class = \"feed\">\r\n                                 <h1>Feed</h1>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n                 {this.state.active ? <Popup toggle = {this.togglePopup}></Popup>: null}\r\n                 {this.state.activemail ? <PopupEmail toggle = {this.togglePopupe}></PopupEmail>: null}\r\n                 {this.state.added!==\"-1\" ?  <PopupFriend string = {this.getAdded} toggle = {this.togglePopupf}></PopupFriend>: null}\r\n             </div>\r\n         );\r\n     }\r\n\r\n}\r\n\r\nclass Popup extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            retype: '',\r\n            wrong: false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.toggle();\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event){\r\n        if (this.state.retype===this.state.password) {\r\n            fetch('/password', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    password: this.state.password\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    this.props.toggle();\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                wrong: true\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"modal\">\r\n                <div className = \"content\">\r\n                    <span className = \"close\" onClick = {this.handleClick}>&times;</span>\r\n                    <p className = \"bigtext\">Change Password</p>\r\n                    <form onSubmit = {this.handleSubmit}>\r\n                        <div className = \"search2\">\r\n                            <h6 className = \"searchfrt\">New Password</h6>\r\n                            <input id = \"password\" className = \"searchBar2\" type = \"password\" value={this.state.password} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className = \"search2\">\r\n                            <h6 className = \"searchfrt\">Retype Password</h6>\r\n                            <input id = \"retype\" className = \"searchBar2\" type = \"password\" value={this.state.retype} onChange = {this.handleChange} required/>\r\n                        </div>\r\n                        <input type = \"submit\" className = \"textpop\" value = \"Update\"/>\r\n                    </form>\r\n                    {this.state.wrong ? <h1 className = \"match\">Your passwords do not match</h1> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass PopupEmail extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            retype: '',\r\n            wrong: false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.toggle();\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event){\r\n        if (this.state.retype===this.state.email) {\r\n            fetch('/email', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    this.props.toggle();\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                wrong: true\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"modal\">\r\n                <div className = \"content\">\r\n                    <span className = \"close\" onClick = {this.handleClick}>&times;</span>\r\n                    <p className = \"bigtext\">Change Email</p>\r\n                    <form onSubmit = {this.handleSubmit}>\r\n                        <div className = \"search2\">\r\n                            <h6 className = \"searchfrt\">New Email</h6>\r\n                            <input id = \"email\" className = \"searchBar2\" type = \"email\" value={this.state.email} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className = \"search2\">\r\n                            <h6 className = \"searchfrt\">Retype Email</h6>\r\n                            <input id = \"retype\" className = \"searchBar2\" type = \"email\" value={this.state.retype} onChange = {this.handleChange} required/>\r\n                        </div>\r\n                        <input type = \"submit\" className = \"textpop\" value = \"Update\"/>\r\n                    </form>\r\n                    {this.state.wrong ? <h1 className = \"match\">Your emails do not match</h1> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass PopupFriend extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.toggle();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"modal\">\r\n                <div className = \"content\">\r\n                    <span className = \"close\" onClick = {this.handleClick}>&times;</span>\r\n                    <p className = \"bigtext\">Add Friend</p>\r\n                    {this.props.string()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}